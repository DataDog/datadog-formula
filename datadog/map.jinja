{% set formula_version = '3.6' %}

{% set os_family_map = salt['grains.filter_by']({
      'Debian': {},
      'RedHat': {},
      'Suse': {},
    },
    grain="os_family")
%}

{% set default_settings = {
    'datadog': {
        'config': {},
        'checks': {},
        'install_settings': {
            'agent_version': 'latest',
        },
    }
}%}

{# Merge os_family_map into the default settings #}
{% do default_settings.datadog.update(os_family_map) %}

{# Merge in datadog pillar #}
{% set datadog = salt['pillar.get']('datadog', default=default_settings.datadog, merge=True) %}
{% set datadog_config = datadog['config'] %}
{% set datadog_checks = datadog['checks'] %}
{% set datadog_install_settings = datadog['install_settings'] %}

{# Set constants for APT key management #}
{% set datadog_apt_trusted_d_keyring = "/etc/apt/trusted.gpg.d/datadog-archive-keyring.gpg" %}
{% set datadog_apt_usr_share_keyring = "/usr/share/keyrings/datadog-archive-keyring.gpg" %}
{% set datadog_apt_key_current_name = "DATADOG_APT_KEY_CURRENT.public" %}
# NOTE: we don't use URLs starting with https://keys.datadoghq.com/, as Python
# on older Debian/Ubuntu doesn't support SNI and get_url would fail on them
{% set datadog_apt_default_keys = {
  datadog_apt_key_current_name: "https://s3.amazonaws.com/public-signing-keys/DATADOG_APT_KEY_CURRENT.public",
  "5F1E256061D813B125E156E8E6266D4AC0962C7D": "https://s3.amazonaws.com/public-signing-keys/DATADOG_APT_KEY_C0962C7D.public",
  "D75CEA17048B9ACBF186794B32637D44F14F620E": "https://s3.amazonaws.com/public-signing-keys/DATADOG_APT_KEY_F14F620E.public",
  "A2923DFF56EDA6E76E55E492D3A80E30382E94DE": "https://s3.amazonaws.com/public-signing-keys/DATADOG_APT_KEY_382E94DE.public",
  }
%}

{# Determine if we're looking for the latest package or a specific version #}
{%- if datadog_install_settings.agent_version == 'latest' %}
    {%- set latest_agent_version = true %}
{%- else %}
    {%- set latest_agent_version = false %}
    {%- set parsed_version = datadog_install_settings.agent_version | regex_match('(([0-9]+)\.[0-9]+\.[0-9]+)(?:~(rc|beta)(\.([0-9]+))?)?') %}
{%- endif %}

{# Determine defaults depending on specified version #}
{%- if latest_agent_version or parsed_version[1] != '5' %}
    {% do datadog_install_settings.update({'config_folder': '/etc/datadog-agent'}) %}
{%- else %}
    {% do datadog_install_settings.update({'config_folder': '/etc/dd-agent'}) %}
{%- endif %}

{%- if latest_agent_version or parsed_version[1] != '5' %}
    {% do datadog_install_settings.update({'config_file': 'datadog.yaml'}) %}
{%- else %}
    {% do datadog_install_settings.update({'config_file': 'datadog.conf'}) %}
{%- endif %}

{%- if 'confd_path' in datadog_config %}
    {% do datadog_install_settings.update({'confd_path': datadog_config.confd_path }) %}
{%- else %}
    {%- if latest_agent_version or parsed_version[1] != '5' %}
        {% do datadog_install_settings.update({'confd_path': '/etc/datadog-agent/conf.d'}) %}
    {%- else %}
        {% do datadog_install_settings.update({'confd_path': '/etc/dd-agent/conf.d'}) %}
    {%- endif %}
{%- endif %}
